name: Build ImmortalWrt

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      GIT_ACTOR: ${{github.actor}}
      GIT_REPOSITORY: ${{github.repository}}
      RUN_NUMBER: ${{github.run_number}}
      RUN_WORKFLOW: ${{github.workflow}}
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      TZ: Asia/Shanghai


    steps:
      - name: 密匙检测（密匙为空则退出）
        run: |
          cd ${GITHUB_WORKSPACE}
          if [[ -n "${{ env.REPO_TOKEN }}" ]]; then
            echo "密匙检测通过，继续执行"
          elif [[ -z "${{ env.REPO_TOKEN }}" ]]; then
            echo "您没有设置仓库密匙，请按教程设置好密匙再来"
            exit 1
          fi
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 清理磁盘空间
      # - name: Free up disk space
      #   run: |
      #     sudo apt-get clean
      #     sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
      #     df -h

      - name: 部署编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update -y
          sudo -E apt-get -qq install -y gawk git gettext libssl-dev xsltproc zip git-core wget curl grep python2.7 python3 python3-pip libpython3-dev
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /${{ env.DIY_WORK }}
          sudo chown $USER:$GROUPS /${{ env.DIY_WORK }}

      # # 启动 tmate 会话
      # - name: Start tmate session
      #   run: |
      #     tmate -S /tmp/tmate.sock new-session -d
      #     tmate -S /tmp/tmate.sock wait tmate-ready
      #     echo "SSH connection: $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
      #     echo "Web connection: $(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')"

      # 设置 ImmortalWrt
      - name: Build openwrt
        run: |
          git clone https://github.com/immortalwrt/immortalwrt.git
          cd immortalwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: SSH远程连接（make menuconfig）
        uses: danshui-git/debugger-action@main

      # # 输出 tmate 连接信息
      # - name: Output tmate connection info
      #   run: |
      #     cd openwrt
      #     echo "SSH connection: $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
      #     echo "Web connection: $(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')"

      # # 等待用户完成 tmate 会话
      # - name: Wait for tmate session to complete
      #   run: |
      #     echo "Waiting for tmate session to complete. Please disconnect from the session to continue."
      #     tmate -S /tmp/tmate.sock wait tmate-exit

      # 编译 ImmortalWrt
      - name: Build ImmortalWrt
        run: |
          cd immortalwrt
          make -j1 V=s

      # 打包固件
      - name: Package firmware
        run: |
          cd immortalwrt/bin/targets
          tar -czf firmware.tar.gz *

      # 上传固件到 GitHub Releases
      - name: Upload firmware to GitHub Releases
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: immortalwrt/bin/targets/firmware.tar.gz
          asset_name: firmware.tar.gz
          asset_content_type: application/gzip
